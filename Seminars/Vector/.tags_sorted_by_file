!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS 		= -g $(STANDARD) $(GCOV) $(WARNINGS) -MD $/;"	m
GCOV	Makefile	/^GCOV 	 	= -fprofile-arcs -ftest-coverage$/;"	m
STANDARD	Makefile	/^STANDARD 	= -std=c11$/;"	m
TARGET	Makefile	/^TARGET 		= try_vector $/;"	m
VALGRIND_KEYS	Makefile	/^VALGRIND_KEYS 	= $/;"	m
WARNINGS	Makefile	/^WARNINGS 	= -Wall -Werror$/;"	m
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
MAXESIZE_RATIO	ivvector.c	/^const uint32 MAXESIZE_RATIO = 100;$/;"	v
MINALLOC_ELEMS	ivvector.c	/^const uint32 MINALLOC_ELEMS = 5; $/;"	v
__alloc_more	ivvector.c	/^static int __alloc_more(vector* this)$/;"	f	file:
__optimize_alloc	ivvector.c	/^static int __optimize_alloc(vector* this)$/;"	f	file:
__vector_eliminate_all_and_free	ivvector.c	/^static void __vector_eliminate_all_and_free(vector* this)$/;"	f	file:
__vector_init	ivvector.c	/^vector* __vector_init(uint32 size, void (*destr)(void* obj))$/;"	f
__vector_popback	ivvector.c	/^int __vector_popback  (vector* this, void* dest)$/;"	f
__vector_popfront	ivvector.c	/^int __vector_popfront (vector* this, void* dest)$/;"	f
__vector_pushback	ivvector.c	/^inline int __vector_pushback (vector* this, const void* obj)$/;"	f
__vector_pushfront	ivvector.c	/^inline int __vector_pushfront(vector* this, const void* obj)$/;"	f
vector_alloc	ivvector.c	/^uint32 vector_alloc(const vector* this)$/;"	f
vector_delete	ivvector.c	/^int vector_delete(vector* this)$/;"	f
vector_empty	ivvector.c	/^int vector_empty(const vector* this)$/;"	f
vector_erase	ivvector.c	/^int vector_erase(vector* this)$/;"	f
vector_esize	ivvector.c	/^uint32 vector_esize(const vector* this)$/;"	f
vector_fit	ivvector.c	/^int vector_fit(vector* this)$/;"	f
vector_get	ivvector.c	/^int vector_get(const vector* this, uint32 index, void* where_to_get)$/;"	f
vector_insert	ivvector.c	/^int vector_insert(vector* this, const void* elem, uint32 index)$/;"	f
vector_maxsize	ivvector.c	/^uint32 vector_maxsize(const vector* this)$/;"	f
vector_remove	ivvector.c	/^int vector_remove(vector* this, uint32 index)$/;"	f
vector_set	ivvector.c	/^int vector_set(vector* this, uint32 index, void* what_to_send)$/;"	f
vector_size	ivvector.c	/^uint32 vector_size(const vector* this)$/;"	f
vector_sort	ivvector.c	/^int vector_sort(vector* this, int (*comp)(const void*, const void*))$/;"	f
CHECK_SIZE	ivvector.h	131;"	d
CHECK_SIZE	ivvector.h	133;"	d
IV_VECTOR	ivvector.h	2;"	d
int32	ivvector.h	/^typedef  int32_t  int32;$/;"	t
int64	ivvector.h	/^typedef  int64_t  int64;$/;"	t
uint32	ivvector.h	/^typedef uint32_t uint32;$/;"	t
uint64	ivvector.h	/^typedef uint64_t uint64;$/;"	t
vector	ivvector.h	/^typedef struct vector_s vector;$/;"	t	typeref:struct:vector_s
vector_init	ivvector.h	32;"	d
vector_iter	ivvector.h	/^typedef struct vector_iter_s vector_iter;$/;"	t	typeref:struct:vector_iter_s
vector_popback	ivvector.h	150;"	d
vector_popfront	ivvector.h	153;"	d
vector_pushback	ivvector.h	144;"	d
vector_pushfront	ivvector.h	147;"	d
BYTES_IN_ELEMS	ivvector_internal.h	102;"	d
FOR_EACH	ivvector_internal.h	76;"	d
IN_BOUNDS	ivvector_internal.h	100;"	d
ITER_CHECK	ivvector_internal.h	82;"	d
IV_POISON	ivvector_internal.h	/^const uint32_t IV_POISON = 0xDEADBEEF;$/;"	v
NEXT_PTR	ivvector_internal.h	97;"	d
OFFSET_PTR	ivvector_internal.h	95;"	d
PREV_PTR	ivvector_internal.h	98;"	d
VECTOR_CHECK	ivvector_internal.h	89;"	d
VEC_MAXSIZE	ivvector_internal.h	/^const uint32_t VEC_MAXSIZE = 4 * 1024 * 1024;$/;"	v
VEC_MAXSIZE	ivvector_internal.h	/^const uint32_t VEC_MAXSIZE = VECTOR_COMPILE_MAXSIZE;$/;"	v
__IVVECTOR_INTERNAL	ivvector_internal.h	2;"	d
alloc	ivvector_internal.h	/^	uint32_t alloc;$/;"	m	struct:vector_s
begin	ivvector_internal.h	/^	char* begin;$/;"	m	struct:vector_s
destr	ivvector_internal.h	/^	void (*destr)(void* obj);$/;"	m	struct:vector_s
emaxsize	ivvector_internal.h	/^	uint32_t emaxsize;$/;"	m	struct:vector_s
esize	ivvector_internal.h	/^	uint32_t esize;$/;"	m	struct:vector_s
index	ivvector_internal.h	/^	uint32 index;$/;"	m	struct:vector_iter_s
maxsize	ivvector_internal.h	/^	uint32_t maxsize;$/;"	m	struct:vector_s
ptr	ivvector_internal.h	/^	vector* ptr;$/;"	m	struct:vector_iter_s
size	ivvector_internal.h	/^	uint32_t size;$/;"	m	struct:vector_s
vector_iter_s	ivvector_internal.h	/^struct vector_iter_s$/;"	s
vector_s	ivvector_internal.h	/^struct vector_s$/;"	s
vector_iter_begin	ivvector_iter.c	/^int vector_iter_begin(vector_iter* this)$/;"	f
vector_iter_del	ivvector_iter.c	/^int vector_iter_del(vector_iter* this)$/;"	f
vector_iter_do	ivvector_iter.c	/^void* vector_iter_do(vector_iter* iter, void* args, void* (*proceed)(void* obj,void* argv))$/;"	f
vector_iter_end	ivvector_iter.c	/^int vector_iter_end(vector_iter* this)$/;"	f
vector_iter_get	ivvector_iter.c	/^vector_iter* vector_iter_get(vector* this)$/;"	f
vector_iter_getelem	ivvector_iter.c	/^int vector_iter_getelem (const vector_iter* this, void* dest)$/;"	f
vector_iter_isbegin	ivvector_iter.c	/^int vector_iter_isbegin(const vector_iter* this)$/;"	f
vector_iter_isend	ivvector_iter.c	/^int vector_iter_isend(const vector_iter* this)$/;"	f
vector_iter_next	ivvector_iter.c	/^int vector_iter_next(vector_iter* this, void* dest)$/;"	f
vector_iter_prev	ivvector_iter.c	/^int vector_iter_prev(vector_iter* this, void* dest)$/;"	f
vector_iter_setelem	ivvector_iter.c	/^int vector_iter_setelem(vector_iter* this, const void* src)$/;"	f
CONDITION	ivvector_utils.c	5;"	d	file:
__copy_elem	ivvector_utils.c	/^inline void __copy_elem(const vector* this, uint32 index, void* dest)$/;"	f
__elem_ptr	ivvector_utils.c	/^inline void* __elem_ptr(const vector* this, uint32 index)$/;"	f
__set_elem	ivvector_utils.c	/^inline void __set_elem(vector* this, uint32 index, const void* src)$/;"	f
__vector_check	ivvector_utils.c	/^int __vector_check(const vector* checked)$/;"	f
__vector_dump	ivvector_utils.c	/^void __vector_dump(const vector* this)$/;"	f
__vector_iter_check	ivvector_utils.c	/^inline int __vector_iter_check(const vector_iter* checked)$/;"	f
__vector_iter_dump	ivvector_utils.c	/^void __vector_iter_dump(const vector_iter* iter)$/;"	f
iv_calloc	ivvector_utils.c	/^inline void* iv_calloc(size_t nmemb, size_t size)$/;"	f
iv_free	ivvector_utils.c	/^inline void iv_free(void* ptr)$/;"	f
iv_realloc	ivvector_utils.c	/^inline void* iv_realloc(void* ptr, size_t size)$/;"	f
POINT	try.c	14;"	d	file:
POINT	try.c	7;"	d	file:
POINT1	try.c	15;"	d	file:
POINT1	try.c	8;"	d	file:
POINT2	try.c	16;"	d	file:
POINT2	try.c	9;"	d	file:
POINT3	try.c	10;"	d	file:
POINT3	try.c	17;"	d	file:
POINT4	try.c	11;"	d	file:
POINT4	try.c	18;"	d	file:
VECTOR_DUMP	try.c	12;"	d	file:
VECTOR_DUMP	try.c	19;"	d	file:
big_tester	try.c	/^void big_tester()$/;"	f
int_destructor	try.c	/^void int_destructor(void* obj)$/;"	f
int_do	try.c	/^void* int_do(void* obj, void* args)$/;"	f
int_sort	try.c	/^int int_sort(const void* p1, const void* p2)$/;"	f
main	try.c	/^int main(int argc, char const *argv[])$/;"	f
